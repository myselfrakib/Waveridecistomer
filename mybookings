<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>My Bookings - WaveRide</title>
  <style>
    body {
      font-family: 'Segoe UI', sans-serif;
      background: linear-gradient(to right, #fbc2eb, #a6c1ee);
      margin: 0;
      padding: 20px;
    }
    .container {
      max-width: 800px;
      margin: auto;
      background: white;
      padding: 25px;
      border-radius: 12px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    }
    h2 {
      text-align: center;
      margin-bottom: 20px;
    }
    .filters {
      display: flex;
      justify-content: space-between;
      margin-bottom: 20px;
    }
    button {
      padding: 8px 16px;
      border: none;
      border-radius: 6px;
      background-color: #007bff;
      color: white;
      font-weight: bold;
      cursor: pointer;
    }
    button.cancel {
      background-color: #dc3545;
      margin-left: 10px;
    }
    .booking {
      border: 1px solid #ccc;
      border-radius: 8px;
      padding: 15px;
      margin-bottom: 15px;
      background-color: #f7f7f7;
    }
    .logout {
      background-color: #333;
      margin-top: 20px;
    }
  </style>
</head>
<body>
  <div class="container">
    <h2>My Bookings</h2>

    <div class="filters">
      <button onclick="filterBookings('all')">All</button>
      <button onclick="filterBookings('upcoming')">Upcoming</button>
      <button onclick="filterBookings('past')">Past</button>
    </div>

    <div id="bookingsList"></div>

    <button class="logout" id="logoutBtn">Logout</button>
  </div>

  <script type="module">
    import { initializeApp } from "https://www.gstatic.com/firebasejs/11.6.0/firebase-app.js";
    import { getAuth, onAuthStateChanged, signOut } from "https://www.gstatic.com/firebasejs/11.6.0/firebase-auth.js";
    import { getDatabase, ref, onValue, remove } from "https://www.gstatic.com/firebasejs/11.6.0/firebase-database.js";

    const firebaseConfig = {
      apiKey: "AIzaSyBHKD70OH34uj7yA0tjBtQZuDbRcRiFins",
      authDomain: "waveride-bike-rental-service.firebaseapp.com",
      projectId: "waveride-bike-rental-service",
      storageBucket: "waveride-bike-rental-service.firebasestorage.app",
      messagingSenderId: "341920732961",
      appId: "1:341920732961:web:3967e19131f8984f0f1060"
    };

    const app = initializeApp(firebaseConfig);
    const auth = getAuth(app);
    const db = getDatabase(app);

    let allBookings = [];

    function renderBookings(filtered = allBookings) {
      const list = document.getElementById("bookingsList");
      list.innerHTML = "";

      if (filtered.length === 0) {
        list.innerHTML = "<p>No bookings found.</p>";
        return;
      }

      filtered.forEach(booking => {
        const div = document.createElement("div");
        div.className = "booking";
        div.innerHTML = `
          <strong>${booking.vehicleName} (${booking.category})</strong><br>
          Date: ${booking.date}<br>
          Time: ${booking.pickupTime}<br>
          Duration: ${booking.duration}<br>
          Status: ${booking.status}<br>
        `;

        const now = new Date();
        const bookingDate = new Date(`${booking.date} ${booking.pickupTime}`);
        if (bookingDate > now) {
          const cancelBtn = document.createElement("button");
          cancelBtn.className = "cancel";
          cancelBtn.innerText = "Cancel Booking";
          cancelBtn.onclick = () => cancelBooking(booking.id);
          div.appendChild(cancelBtn);
        }

        list.appendChild(div);
      });
    }

    function filterBookings(type) {
      const now = new Date();
      if (type === "all") return renderBookings(allBookings);

      const filtered = allBookings.filter(b => {
        const bookingDate = new Date(`${b.date} ${b.pickupTime}`);
        return type === "upcoming" ? bookingDate > now : bookingDate <= now;
      });

      renderBookings(filtered);
    }

    function cancelBooking(id) {
      if (confirm("Are you sure you want to cancel this booking?")) {
        const path = `bookings/${id}`;
        remove(ref(db, path)).then(() => {
          alert("Booking cancelled.");
          location.reload();
        });
      }
    }

    document.getElementById("logoutBtn").addEventListener("click", () => {
      signOut(auth).then(() => window.location.href = "login.html");
    });

    onAuthStateChanged(auth, user => {
      if (!user) {
        alert("Please log in first.");
        window.location.href = "login.html";
        return;
      }

      const bookingsRef = ref(db, "bookings");
      onValue(bookingsRef, snapshot => {
        allBookings = [];
        snapshot.forEach(child => {
          const booking = child.val();
          if (booking.userId === user.uid) {
            allBookings.push({ ...booking, id: child.key });
          }
        });
        renderBookings();
      });
    });
  </script>
</body>
</html>
